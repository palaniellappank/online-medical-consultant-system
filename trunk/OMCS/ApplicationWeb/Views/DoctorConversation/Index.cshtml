@{
    ViewBag.Title = "Index";
    Layout = null;
}
<!DOCTYPE html>
<head>
    @using OMCS.Web
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Trang quản lý Bác Sĩ</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootply-admin.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

    @Scripts.Render("~/bundles/jsOMCS")

    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <script src="~/signalr/hubs"></script>

</head>
<!-- Header -->
    <div id="top-nav" class="navbar navbar-inverse navbar-static-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="~/Doctor/Index">Bác Sĩ: @User.LastName @User.FirstName</a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="~/Account/Logout"><i class="glyphicon glyphicon-lock"></i>Đăng Xuất</a></li>
                </ul>
            </div>
        </div>
        <!-- /container -->
    </div>
    <!-- /Header -->

    <!-- Main -->
    <div class="container">

        <div class="row">
            <div class="col-md-12">
<div class="row" id="chatbox">
    <div class="col-xs-12 col-sm-6 col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading c-list">
                <span class="title">Lịch sử tư vấn</span>
                <ul class="pull-right c-controls">
                    <li><a href="#" class="hide-search" data-command="toggle-search" data-toggle="tooltip" data-placement="top" title="Toggle Search"><i class="glyphicon glyphicon-cog"></i></a></li>
                </ul>
            </div>

            <div class="row" style="display: none;">
                <div class="col-xs-12">
                    <div class="input-group c-search">
                        <input type="text" class="form-control" id="contact-list-search">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-search text-muted"></span></button>
                        </span>
                    </div>
                </div>
            </div>
            <ul class="list-group" id="contact-list">
            </ul>
        </div>
    </div>
    <div class="col-md-8">
        <div id="divChat" class="panel panel-primary">
            <div class="panel-body">
                <ul class="chat" id="chat-content">
                </ul>
            </div>
            <div class="panel-footer">
                <div class="input-group">
                    <textarea id="txtMessage" class="form-control" rows="2" placeholder="Nội dung tin nhắn..."></textarea>
                    <div class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Upload file <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li>
                                <div id="uploader">
                                    <input type="file" name="file" id="file" title="Upload" />
                                </div>
                            </li>
                        </ul>
                    </div>
                    <span class="input-group-btn">
                        <button class="btn btn-warning btn-sm" id="btnUpload">Upload</button>
                    </span>&nbsp
                    <span class="input-group-btn">
                        <button class="btn btn-warning btn-sm" id="btnSendMsg">Gửi</button>
                        <button class="btn btn-info btn-sm" id="requestWebcam"><i class="glyphicon glyphicon-facetime-video" style="font-size: 12px;"></i></button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-info draggable" id="patientWebcam">
    <div class="panel-heading">
        <h3 class="panel-title">Webcam</h3>
    </div>
    <div class="panel-body" style="padding:0">
        <video class="video patient cool-background" autoplay="autoplay" 
            controls="controls" muted="muted" style="width:100%;height:100%">
        </video>
    </div>
</div>
            </div>
            <!--/col-span-9-->
        </div>
    </div>
    <!-- /Main -->
<input id="txtFromUsername" class="textBox" value="@User.Username" type="hidden"/>
<input id="txtToUsername" class="textBox" value="" type="hidden" />

<div class="modal fade in" id="modal-popup-img" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="modal-content">
                    <img src="#" class="img-responsive">
                </div>
            </div>
        </div>
    </div>
</div>


<script id="doctor-list-template" type="text/template">
    <%
        _.each(conversations, function(conversation){
    %>
    <li class="list-group-item">
        <div class="col-xs-12 col-sm-12">
            <input class="username" type="hidden" value="<%= conversation.Username %>" />
            <span class="name"><%= conversation.FullName %></span><br />
            <span class="speciaty"><%= conversation.LastestContent %></span><br />
            <% if (conversation.IsOnline) {
            %>
                <i class="glyphicon glyphicon-user" style="position: absolute; right: 0; top: 40px; color: #2980b9; font-size: 1.2em;"></i>
            <% } %>

            <% if (!conversation.IsRead) {
            %>
                <i class="glyphicon glyphicon-bell" style="position: absolute; right: 0; top: 21px; color: #e67e22; font-size: 1.2em;"></i>
            <% } %>
        </div>
        <div class="clearfix"></div>
    </li>
    <%
        });
    %>  
</script>

<script id="chat-left-template" type="text/template">
    <li class="left clearfix">
        <span class="chat-img pull-left">
            <img src="/Content/ProfilePicture/<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <strong class="primary-font"><%= user.FullName %></strong>
                <small class="pull-right text-muted">
                    <span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %>
                </small>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="/Content/Image/Chat/<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="/Content/Image/Chat/<%= message.Attachment %>" target="_blank">
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="/Content/Image/Chat/<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script id="chat-right-template" type="text/template">
    <li class="right clearfix <% if (!message.IsRead) { %> unread-message-hightlight<% } %>">
        <span class="chat-img pull-right">
            <img src="/Content/ProfilePicture/<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <small class=" text-muted"><span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
                <strong class="pull-right primary-font"><%= user.FullName %></strong>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="/Content/Image/Chat/<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="/Content/Image/Chat/<%= message.Attachment %>" target="_blank">
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="/Content/Image/Chat/<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>


<script type='text/javascript'>
    ChatBoxView = Backbone.View.extend({
        el: $("#chatbox"),
        doctorListEl: $("#contact-list"),
        initialize: function () {
            this.render();
        },
        events: {
            "click .list-group-item": "getMessageList",
            "click #btnSendMsg": "sendMessage",
            "click #requestWebcam": "requestWebcam",
            "keypress #txtMessage": "sendMessagePress",
            "click .picture-thumbnail": "showFullPicture"
            //"click #btnUpload": "upload"
        },
        showFullPicture: function (e) {
            var target = $(e.currentTarget);
            $("#modal-popup-img").find("img").attr("src", target.attr("src"));
            $("#modal-popup-img").modal("show");
        },
        requestWebcam: function () {
            var toUsername = $('#txtToUsername').val();
            if (toUsername.length > 0) {
                chatHub.server.requestWebcam(toUsername);
            }
        },
        renderContactList: function (conversations) {
            var template = _.template($("#doctor-list-template").html(), { conversations: conversations });
            this.doctorListEl.html(template);
        },
        getMessageList: function (e) {
            var username = $(e.currentTarget).find(".username").val();
            $('#txtToUsername').val(username);
            console.log("getMessageList from: " + username);
            chatHub.server.getMessageList(username);
        },
        sendMessage: function (e) {
            var msg = $("#txtMessage").val();
            var toUsername = $('#txtToUsername').val();
            var fromUsername = $('#txtFromUsername').val();
            if ((msg.length > 0) && (toUsername.length > 0)) {
                chatHub.server.sendMessageTo(toUsername, msg);
                $("#txtMessage").val('');
            }
            return;
        },
        sendMessagePress: function (e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
                var msg = $("#txtMessage").val();
                var toUsername = $('#txtToUsername').val();
                var fromUsername = $('#txtFromUsername').val();
                if ((msg.length > 0) && (toUsername.length > 0)) {
                    chatHub.server.sendMessageTo(toUsername, msg);
                    $("#txtMessage").val('');
                }
                return;
            }

            if (e.keyCode == 13 && e.shiftKey) {
            }
        }
    });

    var chatBoxView = new ChatBoxView();

    // Declare a proxy to reference the hub. 
    var chatHub = $.connection.chatHub;

    $(function () {
        $(".draggable").draggable();
        var chatHub = $.connection.chatHub;
        registerClientMethodsInConversation(chatHub);

        // Start Hub
        $.connection.hub.start().done(function () {
            var fromUser = $("#txtFromUsername").val();
            chatHub.server.connectDoctor(fromUser);
        });


        $('#btnUpload').click(function () {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('file');
            var toUsername = $('#txtToUsername').val();
            var fromUsername = $('#txtFromUsername').val();
            formdata.append("toUsername", toUsername);
            formdata.append("fromUsername", fromUsername);
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            $.ajax({
                type: "POST",
                url: '/UserConversation/Upload',
                data: formdata,
                processData: false,
                contentType: false,
                success: function () {
                    chatHub.server.getMessageList(toUsername);
                }
            });
        });
    });

    function registerClientMethodsInConversation(chatHub) {
        chatHub.client.onConnected = function (id, doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onMessageUnRead = function (doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }
        chatHub.client.messageReceived = function (sender, receiver, message) {
            console.log("Message Receive:");
            console.log(receiver);

            var fromUsername = $('#txtFromUsername').val();
            var toUsername = $('#txtToUsername').val();
            if (receiver.Username == fromUsername) {
                chatBoxView.renderContactList(receiver.ConversationList);
                if (toUsername == sender.Username) {
                    AddMessage(sender, message);
                }
            }

            if (sender.Username == fromUsername) {
                chatBoxView.renderContactList(sender.ConversationList);
                if (toUsername == receiver.Username) {
                    AddMessage(sender, message);
                }
            }
        }

        chatHub.client.onGetConversationList = function (conversations) {
            console.log(conversations);
            chatBoxView.renderContactList(conversations);
        }

        chatHub.client.onGetMessageList = function (fromUser, toUser, messageDetails) {
            console.log("onGetMessageList");
            console.log(messageDetails);
            console.log(fromUser);
            console.log(toUser);
            $("#chat-content").html("");
            var loginUsername = $('#txtFromUsername').val();
            var templateLeft = $("#chat-left-template").html();
            var templateRight = $("#chat-right-template").html();
            _.forEach(messageDetails, function (message) {
                if (loginUsername == message.Username) {
                    $("#chat-content").append(_.template(templateLeft, { user: fromUser, message: message }));
                } else {
                    $("#chat-content").append(_.template(templateRight, { user: toUser, message: message }));
                }
            });
            $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
        }
    }

    function AddMessage(user, message) {
        var loginUsername = $('#txtFromUsername').val();
        var template = $("#chat-right-template").html();
        if (loginUsername == user.Username) {
            template = $("#chat-left-template").html();
        }
        $("#chat-content").append(_.template(template, { user: user, message: message }));
        $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
    }

</script>

<script src="~/Scripts/webrtc/adapter.js"></script>
<script src="~/Scripts/webrtc/connectionManager.js"></script>
<script src="~/Scripts/webrtc/app-doctor.js"></script>