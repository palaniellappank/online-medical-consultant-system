@{
    ViewBag.Title = "Tư Vấn Online";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@model IEnumerable<OMCS.DAL.Model.User>
@using OMCS.Web

<!--Script references. -->
<script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
<script src="~/signalr/hubs"></script>
<script src="~/Scripts/webrtc/adapter.js"></script>
<script src="~/Scripts/webrtc/connectionManager.js"></script>
<script src="~/Scripts/webrtc/app-patient.js"></script>
<script type="text/javascript" src="~/Content/plupload/moxie.js"></script>
<script type="text/javascript" src="~/Content/plupload/plupload.dev.js"></script>

<link href="~/Content/bootstrap-star-rating/css/star-rating.css" rel="stylesheet" />
<link href="~/Content/evaluate-page/evaluate.css" rel="stylesheet" />
<script src="~/Content/bootstrap-star-rating/js/star-rating.js"></script>
<style>
    #chat-content .pull-right {
        margin-right: 22px;
    }
    .panel-heading {
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
    }
</style>
<body>
    <h2>Tư vấn trực tuyến</h2>
    <div class="form-group">
        <label>Lọc theo chuyên khoa</label>
        <select id="specialty-select" multiple="multiple" style="width: 300px;">
            @foreach (var specialtyField in ViewBag.SpecialtyFields) {
                //  if (specialtyField.ParentId == 0)
                {
                    <optgroup label="@specialtyField.Name">
                       @foreach (var specialtyFieldChild in ViewBag.SpecialtyFields) {
                           if (specialtyFieldChild.SpecialtyFieldId == specialtyField.SpecialtyFieldId)
                           {
                            <option value="@specialtyFieldChild.Name">@specialtyFieldChild.Name</option>
                           }
                       }
                       @foreach (var specialtyFieldChild in ViewBag.SpecialtyFields) {
                           if (specialtyFieldChild.ParentId == specialtyField.SpecialtyFieldId) {
                            <option value="@specialtyFieldChild.Name">@specialtyFieldChild.Name</option>
                           }
                       }
                   </optgroup>
                }
            }
        </select>
    </div>
    <hr />
        <div class="row" id="chatbox">
            <div class="col-xs-12 col-sm-4">
                <div class="panel panel-primary">
                    <div class="panel-heading c-list">
                        <span class="title">Danh sách bác sĩ</span>
                    </div>
                    <div class="panel-body" style="padding: 0;">
                        <ul class="list-group" id="contact-list" style="height: 458px; width: auto">
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-sm-8">
                <div class="panel panel-primary webcam-content" style="display:none">
                    <div class="panel-body">
                        <video id="webcam" class="video patient cool-background" autoplay="autoplay"
                            controls="controls" muted="muted" style="width: 100%; height: 100%;">
                        </video>
                        <canvas id="photo" style="display: none"></canvas>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group-btn" style="margin-right: 53px;margin-left: auto;display:block">
                            <button class="btn btn-warning btn-sm" id="closePatientWebcam" data-toggle="tooltip" data-original-title="Đóng webcam...">
                                <i class="glyphicon glyphicon-remove" style="font-size: 12px;"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="panel panel-primary panel-chat">
                    <div class="panel-heading c-list">
                        <span id="chat-doctor"></span>
                    </div>
                    <div class="panel-body" style="padding-right: 0">
                        <ul class="chat" id="chat-content" style="height: 360px; padding-right: 10px">
                        </ul>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                        <textarea id="txtMessage" class="form-control input-sm" rows="2" cols="80" placeholder="Nội dung tin nhắn..."></textarea>
                        <span class="input-group-btn">
                            <button class="btn btn-warning btn-sm" id="btnSendMsg">Gửi</button>
                        </span>
                        </div>
                        <div id="filelist"></div>
                        <div id="upload-container">
                            <a id="pickfiles" href="javascript:;">Gửi file đính kèm</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</body>

<div class="modal fade in" id="modal-popup-img" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="modal-content">
                    <img src="#" class="img-responsive">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade in" id="doctor-detail" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                
            </div>
        </div>
    </div>
</div>

<script id="doctor-list-template" type="text/template">
    <%
        _.each(doctors, function(doctor){
    %>
    <li class="list-group-item row" data-email="<%= doctor.Email %>">
        <div class="col-xs-12 col-sm-3">
            <img src="/Content/Image/ProfilePicture/<%= doctor.ProfilePicture %>" alt="<%= doctor.FullName %>" class="img-responsive img-circle" />
        </div>
        <div class="col-xs-12 col-sm-9">
            <input class="username" type="hidden" value="<%= doctor.Email %>" />
            <span class="name"><%= doctor.FullName %></span><br />
            <span class="speciaty"><%= doctor.SpecialtyField %></span>
            <span class="lastest-message"><%= doctor.LastestContent %></span><br />
            <% if (doctor.IsOnline) {
            %>
                <i class="glyphicon glyphicon-user" style="position: absolute; right: 0; top: 40px; color: #2980b9; font-size: 1.2em;"></i>
            <% } %>

            <% if (!doctor.IsRead) {
            %>
                <i class="glyphicon glyphicon-bell" style="position: absolute; right: 0; top: 21px; color: #e67e22; font-size: 1.2em;"></i>
            <% } %>
        </div>
        <div class="clearfix"></div>
    </li>
    <%
        });
    %>  
</script>

<script id="chat-top-template" type="text/template">
    <strong class="title"><%= user.FullName %>
    </strong>
</script>

<script id="chat-left-template" type="text/template">
    <li class="left clearfix">
        <span class="chat-img pull-left">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <strong class="primary-font"><%= user.FullName %></strong> <small class="pull-right text-muted">
                    <span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script id="chat-right-template" type="text/template">
    <li class="right clearfix <% if (!message.IsRead) { %> unread-message-hightlight<% } %>">
        <span class="chat-img pull-right">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <small class=" text-muted"><span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
                <strong class="pull-right primary-font"><%= user.FullName %></strong>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script type="text/javascript">
    BodyView = Backbone.View.extend({
        el: $("body"),
        events: {
            "click .showDoctorDetail": "showDoctorDetail",
            "click": "handleClick",
            "click #closePatientWebcam": "hideWebcam"
        },
        showDoctorDetail: function (e) {
            $("#doctor-detail").removeData().unbind();
            new DoctorDetailView({
                doctorId: $(e.target).attr("data-id"),
                el: "#doctor-detail"
            });
        },
        handleClick: function (e) {
            if (! $(e.target).parents().hasClass("popover")) {
                $(".popover").remove();
            }
        },
        hideWebcam: function (e) {
            $(".webcam-content").css("display", "none");
        }
    });
    new BodyView();
    var doctorList;
    ChatBoxView = Backbone.View.extend({
        el: $("#chatbox"),
        contactListEl: $("#contact-list"),
        initialize: function () {
            this.render();
        },
        events: {
            "click .list-group-item": "getMessageList",
            "mouseover": "getDoctorRating",
            "click #btnSendMsg": "sendMessage",
            "keypress #txtMessage": "sendMessagePress",
            "focus #txtMessage": "txtMessageFocus",
            "click .picture-thumbnail": "showFullPicture"
        },
        txtMessageFocus: function (e) {
            $(".popover").hide();
        },
        getDoctorRating: function (e) {
            var target = $(e.target).parents(".list-group-item");
            var email = target.attr("data-email");
            if (email != undefined) {
                //First hide popover form other list-group-item
                var exist = false;
                _.each($('.popover'), function (popover) {
                    if ($(popover).find(".email").val() != email) {
                        $(popover).remove();
                    } else exist = true;
                });
                if (exist) return;
                target.popover({
                    content: "<div class='rating-popover'><div class='ajax-loader'></div><div>",
                    html: true,
                    container: 'body'
                }).popover('show');
                var currentLeft = parseInt($(".popover").css("left"));
                $(".popover").css("left", currentLeft - 14 + "px");
                setTimeout(function () {
                    $.get('/Comment/RateQuickView?doctorEmail=' + email, function (d) {
                        $(".popover").find(".rating-popover").html(d);
                    });
                }, 1000);
            } else {
                //$('.popover').remove();
            }
        },
        showFullPicture: function(e) {
            var target = $(e.currentTarget);
            $("#modal-popup-img").find("img").attr("src", target.attr("src"));
            $("#modal-popup-img").modal("show");
        },
        renderContactList: function (doctors) {
            //Get filter from user
            var selectedItems = $("#specialty-select").val();
            if (selectedItems != null && selectedItems.length != 0) {
                //Filter doctorList
                var filteredList = [];
                _.each(doctorList, function (doctor) {
                    if (selectedItems.indexOf(doctor.SpecialtyField) != -1) {
                        filteredList.push(doctor);
                    }
                });
                doctors = filteredList;
            }
            var template = _.template($("#doctor-list-template").html(), { doctors: doctors });
            if (this.contactListEl.hasClass("mCustomScrollbar")) {
                this.contactListEl.find(".mCSB_container").html(template);
                $("#contact-list").mCustomScrollbar("update");
            } else {
                this.contactListEl.html(template);
                this.contactListEl.mCustomScrollbar({
                    theme: "minimal-dark"
                });
            }
        },
        getMessageList: function (e) {
            var username = $(e.currentTarget).find(".username").val();
            $('#txtToEmail').val(username);
            chatHub.server.getMessageList(username);
        },
        sendMessage: function (e) {
            var msg = $("#txtMessage").val();
            var toEmail = $('#txtToEmail').val();
            var fromEmail = $('#txtFromEmail').val();
            //var fileInput = document.getElementById('file');
            if ((msg.length > 0) && (toEmail.length > 0)) {
                chatHub.server.sendMessageTo(toEmail, msg);
                $("#txtMessage").val('');
            }
            return;
        },
        sendMessagePress: function (e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
                var msg = $("#txtMessage").val().replace('\r', '&lt;br/&gt;');
                var toEmail = $('#txtToEmail').val();
                var fromEmail = $('#txtFromEmail').val();
                if ((msg.length > 0) && (toEmail.length > 0)) {
                    chatHub.server.sendMessageTo(toEmail, msg);
                    $("#txtMessage").val('');
                }
                return;
            }

            if (e.keyCode == 13 && e.shiftKey) {
            }
        }
    });

    var chatBoxView = new ChatBoxView();

    var chatHub = $.connection.chatHub;

    $(function () {
        OMCSChat.App.init($("#txtFromEmail").val());
        registerClientMethods(chatHub);
        $.connection.hub.start().done(function () {
            chatHub.server.connectPatient($("#txtFromEmail").val());
        });
        initSelectSpecialtyField();
        initUploadAttachment();
    });

    function initSelectSpecialtyField() {
        $("#specialty-select").select2();
        $("#specialty-select").on("change", function (e) {
            var selectedItems = $("#specialty-select").val();
            if (selectedItems != null && selectedItems.length != 0) {
                //Filter doctorList
                var filteredList = [];
                _.each(doctorList, function (doctor) {
                    if (selectedItems.indexOf(doctor.SpecialtyField) != -1) {
                        filteredList.push(doctor);
                    }
                });
                chatBoxView.renderContactList(filteredList);
            } else {
                chatBoxView.renderContactList(doctorList);
            }
        });
    }

    function registerClientMethods(chatHub) {
        chatHub.client.onConnected = function (id, doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onMessageUnRead = function (doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onGetDoctorList = function (doctors) {
            doctorList = doctors;
            chatBoxView.renderContactList(doctors);
        }

        chatHub.client.onRefreshDoctorList = function () {
            chatHub.server.connectPatient($("#txtFromEmail").val());
        }

        chatHub.client.onGetMessageList = function (fromUser, toUser, messageDetails) {
            $("#chat-doctor").html("");
            var templateTop = $("#chat-top-template").html();
            $("#chat-doctor").append(_.template(templateTop, { user: toUser }));
            if ($("#chat-content").hasClass("mCustomScrollbar")) {
                $("#chat-content").mCustomScrollbar("destroy");
            }
            $("#chat-content").html("");
            var loginEmail = $('#txtFromEmail').val();
            var templateLeft = $("#chat-left-template").html();
            var templateRight = $("#chat-right-template").html();
            _.forEach(messageDetails, function (message) {
                if (loginEmail == message.Email) {
                    $("#chat-content").append(_.template(templateLeft, { user: fromUser, message: message }));
                } else {
                    $("#chat-content").append(_.template(templateRight, { user: toUser, message: message }));
                }
            });
            $("#chat-content").mCustomScrollbar({
                theme: "minimal-dark"
            });
            $("#chat-content").mCustomScrollbar("scrollTo", "last");
        }

        // On New User Connected
        chatHub.client.onNewDoctorConnected = function (id, name) {
            AddUser(chatHub, id, name);
        }

        chatHub.client.messageReceived = function (sender, receiver, message) {
            var fromEmail = $('#txtFromEmail').val();
            var toEmail = $('#txtToEmail').val();
            if (receiver.Email == fromEmail) {
                chatBoxView.renderContactList(receiver.DoctorList);
                if (toEmail == sender.Email) {
                    AddMessage(sender, message);
                }
            }

            if (sender.Email == fromEmail) {
                chatBoxView.renderContactList(sender.DoctorList);
                if (toEmail == receiver.Email) {
                    AddMessage(sender, message);
                }
            }
        }
    }

    function AddMessage(user, message) {
        var loginEmail = $('#txtFromEmail').val();
        var template = $("#chat-right-template").html();
        if (loginEmail == user.Email) {
            template = $("#chat-left-template").html();
        }
        $("#chat-content .mCSB_container").append(_.template(template, { user: user, message: message }));
        $("#chat-content").mCustomScrollbar("update");
        $("#chat-content").mCustomScrollbar("scrollTo", "last");
    }

    function initUploadAttachment() {
        var uploader = new plupload.Uploader({
            runtimes: 'html5,flash,silverlight,html4',
            browse_button: 'pickfiles', // you can pass in id...
            container: document.getElementById('upload-container'), // ... or DOM Element itself
            url: baseUrl + 'UserConversation/Upload',
            flash_swf_url: baseUrl + 'Content/plupload/js/Moxie.swf',
            silverlight_xap_url: baseUrl + 'Content/plupload/js/Moxie.xap',

            filters: {
                max_file_size: '4mb',
                mime_types: [
                    { title: "Image files", extensions: "jpg,gif,png" },
                    { title: "Zip files", extensions: "zip,rar,7z,pdf,doc,docx,xls,xlsx" }
                ]
            },

            multipart_params: {
            },

            init: {
                UploadProgress: function (up, file) {
                    document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + "%</span>";
                },

                FilesAdded: function () {
                    uploader.start();
                },

                UploadComplete: function () {
                    chatHub.server.getLastestChatMessage($('#txtToEmail').val());
                    $('#filelist').children().fadeOut(2000);
                },

                Error: function (up, err) {
                    console.log("\nError #" + err.code + ": " + err.message);
                }
            }
        });

        uploader.init();
        uploader.bind('FilesAdded', function (up, files) {
            uploader.settings.multipart_params.fromEmail = $('#txtFromEmail').val();
            uploader.settings.multipart_params.toEmail = $('#txtToEmail').val();
            plupload.each(files, function (file) {
                document.getElementById('filelist').innerHTML += '<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';
            });
        });
    }
</script>