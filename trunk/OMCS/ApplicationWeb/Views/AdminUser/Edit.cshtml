@model OMCS.DAL.Model.User

@{
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

@{
    ViewBag.Title = "Edit";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h2>Cập Nhật</h2>

@using (Html.BeginForm("Edit", "AdminUser", FormMethod.Post, new { enctype = "multipart/form-data", id = "parentForm" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User</legend>

        @Html.HiddenFor(model => model.UserId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            Phân Quyền
        </div>
        <div class="editor-field">
            @{
                var db = new OMCS.DAL.Model.OMCSDBContext();
                List<OMCS.DAL.Model.Role> roles = db.Roles.ToList();
            }
            @Html.DropDownListFor(model => model.Roles.ElementAt(0).RoleId,
            new SelectList(roles, "RoleId", "RoleName", Model.Roles.ElementAt(0).RoleId))
            @Html.ValidationMessageFor(model => model.Roles)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProfilePicture)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(mode => mode.ProfilePicture)
            <img src="@Model.ProfilePicture" style="width: 80px; height:80px;" />
            <input type="file" name="file" id="file" />
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Gender, new SelectList(new List<string> { "Nam", "Nữ" }))
            @Html.ValidationMessageFor(model => model.Gender)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Birthday)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Birthday)
            @Html.ValidationMessageFor(model => model.Birthday)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PrimaryAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PrimaryAddress)
            @Html.ValidationMessageFor(model => model.PrimaryAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SecondaryAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SecondaryAddress)
            @Html.ValidationMessageFor(model => model.SecondaryAddress)
        </div>

        <br />
        <input type="submit" value="Lưu" class="btn btn-success btn-sm" />
        @Html.ActionLink("Quay Lại", "Index", "", new { @class = "btn btn-danger btn-sm" })
    </fieldset>
}

<script type="text/javascript">

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
