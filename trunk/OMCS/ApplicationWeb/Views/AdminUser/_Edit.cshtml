@model OMCS.DAL.Model.User
@using OMCS.Web


@using (Ajax.BeginForm("Edit", "AdminUser", null, new { EncType = "multipart/form-data", id = "edit-form" }))
{
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Cập Nhật</h4>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.CreatedDate)

                <div class="form-group">
                    @Html.LabelFor(model => model.Email)
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control required email" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password)
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control required" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName)
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control required" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName)
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control required" })
                </div>

                <form runat="server">
                    @Html.LabelFor(model => model.ProfilePicture)<br />
                    <img src="@Html.GetPictureUrl("Profile")@Model.ProfilePicture" style="width: 80px; height:80px;"/>
                    <input type="file" name="file" id="file" class="form-control" />
                </form>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender)
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new List<string> { "Nam", "Nữ" }), new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Birthday)
                    @Html.TextBoxFor(model => model.Birthday, "{0:dd-MM-yyyy}", new { type = "date", @class = "form-control datepicker" })
                    @Html.EditorFor(model => model.Birthday)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone)
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrimaryAddress)
                    @Html.TextBoxFor(model => model.PrimaryAddress, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SecondaryAddress)
                    @Html.TextBoxFor(model => model.SecondaryAddress, new { @class = "form-control" })
                </div>
            </div>

            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Cập nhật</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Bỏ qua</button>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#edit-form").validate({
            rules: {
                Email: {
                    remote: {
                        url: "@Url.Action("CheckExistEmail", "AdminUser", new { id = Model.UserId })",
                        timeout: 5000,
                        type: "POST"
                    },
                    maxlength: 50
                },
                FirstName: {
                    maxlength: 50
                },
                LastName: {
                    maxlength: 50
                },
                Password: {
                    rangelength: [6, 32]
                },
                RePassword: {
                    rangelength: [6, 32]
                }
            }
        });
    });
</script>
