@model OMCS.DAL.Model.User
@using OMCS.Web
@{
    ViewBag.Title = "Thông tin Admin";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<img alt="User Pic" id="targetImg" src="@Html.GetPictureUrl("Profile")@Model.ProfilePicture" class="img-circle" style="width:120px; height:120px">

<div>
    <input type="file" name="file_upload" id="file_upload" />
</div>

<div class="row">
    <div class="col-xs-4" style="float: right">
        <label class="switch-light progress progress-striped active" onclick="">
            <input type="checkbox" id="enable">
            <span>Thay đổi
                <span aria-label="Tắt" title="Tắt">O</span>
                <span aria-label="Bật" title="Bật">I</span>
            </span>
            <a class="progress-bar progress-bar-success"></a>
        </label>
    </div>
</div>

<table class="table table-data table-bordered table-striped" style="clear: both">
    <tbody>
        <tr>
            <td style="width: 35%;">@Html.DisplayNameFor(model => model.FullName)</td>
            <td style="width: 65%;">
                <a href="#" id="lastname" data-type="text"
                    data-title="@Html.DisplayNameFor(model => model.LastName)" class="editable editable-click">
                    @Html.DisplayFor(model => model.LastName)
                </a>
                <a href="#" id="firstname" data-type="text" 
                    data-title="@Html.DisplayNameFor(model => model.FirstName)" class="editable editable-click">
                    @Html.DisplayFor(model => model.FirstName)
                </a>
            </td>
        </tr>    
        <tr>
            <td>@Html.DisplayNameFor(model => model.Gender)</td>
            <td>
                <a href="#" id="gender" data-type="select" data-value="@Html.DisplayFor(model => model.Gender)" 
                    data-title="@Html.DisplayNameFor(model => model.Gender)" class="editable editable-click"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Birthday)</td>
            <td>
                <a href="#" id="birthday" data-type="date" data-value="@Html.DisplayFor(model => model.Birthday)"
                    data-title="@Html.DisplayNameFor(model => model.Birthday)"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Phone)</td>
            <td>
                <a href="#" id="phone" data-type="tel"
                    data-title="@Html.DisplayNameFor(model => model.Phone)">@Html.DisplayFor(model => model.Phone)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.PrimaryAddress)</td>
            <td>
                <a href="#" id="primaryaddress" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.PrimaryAddress)">@Html.DisplayFor(model => model.PrimaryAddress)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.SecondaryAddress)</td>
            <td>
                <a href="#" id="secondaryaddress" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.SecondaryAddress)">@Html.DisplayFor(model => model.SecondaryAddress)</a>
            </td>
        </tr>
    </tbody>
</table>

<script type="text/javascript">
    $(function () {     
        //defaults
        $.fn.editable.defaults.url = '/AdminInformation/Save';
        $.fn.editable.defaults.emptytext = 'Trống';
        $.fn.editable.defaults.pk = @Html.DisplayFor(model => model.UserId);

        //enable / disable
        $('#enable').click(function () {
            if ($(this).prop("checked")) {
                $("#autoopendiv").css("display", "block");
            } else {
                $("#autoopendiv").css("display", "none");
            }
            $('.table-data .editable').editable('toggleDisabled');
        });

        //editables 
        $('#lastname').editable({
            type: 'text',
            name: 'lastname',
            validate: function (value) {
                if ($.trim(value) == '') return jQuery.validator.messages.required;
            }
        });

        $('#firstname').editable({
            validate: function (value) {
                if ($.trim(value) == '') return jQuery.validator.messages.required;
            }
        });

        $('#gender').editable({
            source: [
                { value: "Nam", text: 'Nam' },
                { value: "Nữ", text: 'Nữ' }
            ]
        });
        
        $('#birthday').editable({
            format: 'dd-mm-yyyy',    
            viewformat: 'dd/mm/yyyy',    
            datepicker: {
                firstDay: 1
            }
        });

        $('#phone').editable({
            validate: function (value) {
                var reg = new RegExp(/^[0-9]/);
                if (value.length > 8 && value.length < 12) {
                    if (!value.match(reg)) {
                        return "Vui lòng nhập số !";
                    }
                } else {
                    return "Nhập trong khoảng từ 8-12 !";
                }
            }
        });

        $('#primaryaddress').editable();

        $('#password').editable({            
            validate: function (value) {
                var passw=  /^[A-Za-z0-9]\w{5,32}$/;               
                if (!value.match(passw)) {
                    return "Vui lòng nhập lại !";                  
                }
            }
        });
        $('#repassword').editable();

        $('#secondaryaddress').editable();
        
        $('.table-data .editable').on('hidden', function (e, reason) {
            if (reason === 'save' || reason === 'nochange') {
                var $next = $(this).closest('tr').next().find('.editable');
                if ($('#autoopen').is(':checked')) {
                    setTimeout(function () {
                        $next.editable('show');
                    }, 300);
                } else {
                    $next.focus();
                }
            }
        });
        $('.table-data .editable').editable('toggleDisabled');
       
        $('#file_upload').uploadify({
            'swf': "@Url.Content("~/Content/UploadifyContent/uploadify.swf")",
            'cancelImg': "@Url.Content("~/Content/UploadifyContent/uploadify-cancel.png")",
            'uploader': "@Url.Action("Uploadify", "AdminInformation")",
            'onUploadSuccess' : function(file, data, response) {
                //$("#uploaded").append("<img src='" + data + "' alt='Uploaded Image' />");
                window.location.reload(true);
            }
        });
    });
</script>
