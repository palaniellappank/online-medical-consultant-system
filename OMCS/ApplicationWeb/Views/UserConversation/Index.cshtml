@{
    ViewBag.Title = "Tư Vấn Online";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@model IEnumerable<OMCS.DAL.Model.User>
@using OMCS.Web

<!--Script references. -->
<script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
<script src="~/signalr/hubs"></script>
<script src="~/Scripts/webrtc/adapter.js"></script>
<script src="~/Scripts/webrtc/connectionManager.js"></script>
<script src="~/Scripts/webrtc/app-patient.js"></script>
<link rel="stylesheet" href="~/Content/jquery.mCustomScrollbar.css" />
<script src="~/Scripts/jquery.mCustomScrollbar.concat.min.js"></script>
<body>
    <h1>Tư vấn trực tuyến
    </h1>
    <hr />
    <div class="container">
        <div class="row" id="chatbox">
            <div class="col-xs-12 col-sm-6 col-md-4" style="height: 389px">
                <div class="panel panel-default" style="height: 460px">
                    <div class="panel-heading c-list">
                        <span class="title">Danh sách bác sĩ</span>
                    </div>
                    <div class="content_1">
                        <ul class="list-group" id="contact-list" style="height: 450px; width: auto">
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-md-7">
                <div id="divChat" class="panel panel-primary">
                    <div class="panel-heading c-list">
                        <span id="chat-doctor"></span>
                    </div>
                    <div class="panel-body" style="height: 360px; overflow: scroll">
                        <ul class="chat" id="chat-content">
                        </ul>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                            <textarea id="txtMessage" class="form-control input-sm" rows="2" cols="80" placeholder="Nội dung tin nhắn..."></textarea>
                            <div class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">Upload file <b class="caret"></b></a>
                                <ul class="dropdown-menu">
                                    <li>
                                        <div id="uploader">
                                            <input type="file" name="file" id="file" title="Upload" />
                                        </div>
                                    </li>
                                </ul>
                            </div>
                            <span class="input-group-btn">
                                <button class="btn btn-warning btn-sm" id="btnUpload">Upload</button>
                            </span>&nbsp
                        <span class="input-group-btn">
                            <button class="btn btn-warning btn-sm" id="btnSendMsg">Gửi</button>
                        </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>


<div class="panel panel-info draggable" id="patientWebcam">
    <div class="panel-heading">
        <h3 class="panel-title">Webcam</h3>
    </div>
    <div class="panel-body" style="padding: 0">
        <video class="video patient cool-background" autoplay="autoplay"
            controls="controls" muted="muted" style="width: 100%; height: 100%">
        </video>
    </div>
</div>

<div class="modal fade in" id="modal-popup-img" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="modal-content">
                    <img src="#" class="img-responsive">
                </div>
            </div>
        </div>
    </div>
</div>

<script id="doctor-list-template" type="text/template">
    <%
        _.each(doctors, function(doctor){
    %>
    <li class="list-group-item">
        <div class="col-xs-12 col-sm-3">
            <img src="/Content/ProfilePicture/<%= doctor.ProfilePicture %>" alt="<%= doctor.FullName %>" class="img-responsive img-circle" />
        </div>
        <div class="col-xs-12 col-sm-9">
            <input class="username" type="hidden" value="<%= doctor.Username %>" />
            <span class="name"><%= doctor.FullName %></span><br />
            <span class="speciaty"><%= doctor.SpeciatyField %></span>
            <span class="lastest-message"><%= doctor.LastestContent %></span><br />
            <% if (doctor.IsOnline) {
            %>
                <i class="glyphicon glyphicon-user" style="position: absolute; right: 0; top: 40px; color: #2980b9; font-size: 1.2em;"></i>
            <% } %>

            <% if (!doctor.IsRead) {
            %>
                <i class="glyphicon glyphicon-bell" style="position: absolute; right: 0; top: 21px; color: #e67e22; font-size: 1.2em;"></i>
            <% } %>
        </div>
        <div class="clearfix"></div>
    </li>
    <%
        });
    %>  
</script>

<script id="chat-top-template" type="text/template">
    <strong class="title">Bác sĩ tư vấn: <%= user.FullName %></strong>
</script>

<script id="chat-left-template" type="text/template">
    <li class="left clearfix">
        <span class="chat-img pull-left">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <strong class="primary-font"><%= user.FullName %></strong> <small class="pull-right text-muted">
                    <span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script id="chat-right-template" type="text/template">
    <li class="right clearfix <% if (!message.IsRead) { %> unread-message-hightlight<% } %>">
        <span class="chat-img pull-right">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <small class=" text-muted"><span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
                <strong class="pull-right primary-font"><%= user.FullName %></strong>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script type="text/javascript">
    ChatBoxView = Backbone.View.extend({
        el: $("#chatbox"),
        contactListEl: $("#contact-list"),
        initialize: function () {
            this.render();
        },
        events: {
            "click .list-group-item": "getMessageList",
            "click #btnSendMsg": "sendMessage",
            "keypress #txtMessage": "sendMessagePress",
            "click .picture-thumbnail": "showFullPicture"
        },
        showFullPicture: function (e) {
            var target = $(e.currentTarget);
            $("#modal-popup-img").find("img").attr("src", target.attr("src"));
            $("#modal-popup-img").modal("show");
        },
        renderContactList: function (doctors) {
            var template = _.template($("#doctor-list-template").html(), { doctors: doctors });
            this.contactListEl.html(template);
        },
        getMessageList: function (e) {
            var username = $(e.currentTarget).find(".username").val();
            $('#txtToUsername').val(username);
            chatHub.server.getMessageList(username);
        },
        sendMessage: function (e) {
            var msg = $("#txtMessage").val();
            var toUsername = $('#txtToUsername').val();
            var fromUsername = $('#txtFromUsername').val();
            //var fileInput = document.getElementById('file');
            if ((msg.length > 0) && (toUsername.length > 0)) {
                chatHub.server.sendMessageTo(toUsername, msg);
                $("#txtMessage").val('');
            }
            return;
        },
        sendMessagePress: function (e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
                var msg = $("#txtMessage").val().replace('\r', '&lt;br/&gt;');
                var toUsername = $('#txtToUsername').val();
                var fromUsername = $('#txtFromUsername').val();
                if ((msg.length > 0) && (toUsername.length > 0)) {
                    chatHub.server.sendMessageTo(toUsername, msg);
                    $("#txtMessage").val('');
                }
                return;
            }

            if (e.keyCode == 13 && e.shiftKey) {
            }
        }
    });

    var chatBoxView = new ChatBoxView();

    var chatHub = $.connection.chatHub;

    $(function () {
        $(".draggable").draggable();
        OMCSChat.App.init($("#txtFromUsername").val());
        registerClientMethods(chatHub);
        $.connection.hub.start().done(function () {
            chatHub.server.connectPatient($("#txtFromUsername").val());
        });

        $.mCustomScrollbar.defaults.scrollButtons.enable = true; //enable scrolling buttons by default
        $.mCustomScrollbar.defaults.axis = "yx"; //enable 2 axis scrollbars by default
        $("#content-d").mCustomScrollbar({ theme: "dark" });

        $('#btnUpload').click(function () {
            var formdata = new FormData(); //FormData object
            var fileInput = document.getElementById('file');
            var toUsername = $('#txtToUsername').val();
            var fromUsername = $('#txtFromUsername').val();
            formdata.append("toUsername", toUsername);
            formdata.append("fromUsername", fromUsername);
            //Iterating through each files selected in fileInput
            for (i = 0; i < fileInput.files.length; i++) {
                //Appending each file to FormData object
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
            }
            $.ajax({
                type: "POST",
                url: '/UserConversation/Upload',
                data: formdata,
                processData: false,
                contentType: false,
                success: function () {
                    chatHub.server.getMessageList(toUsername);                    
                }
            });
        });
    });

    function registerClientMethods(chatHub) {
        chatHub.client.onConnected = function (id, doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onMessageUnRead = function (doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onGetDoctorList = function (doctors) {
            console.log("onGetDoctorList");
            chatBoxView.renderContactList(doctors);
        }

        chatHub.client.onRefreshDoctorList = function () {
            chatHub.server.connectPatient($("#txtFromUsername").val());
        }

        chatHub.client.onGetMessageList = function (fromUser, toUser, messageDetails) {
            console.log("onGetMessageList");
            console.log(messageDetails);
            console.log(fromUser);
            console.log(toUser);
            $("#chat-doctor").html("");
            var templateTop = $("#chat-top-template").html();
            if (loginUsername == loginUsername) {
                $("#chat-doctor").append(_.template(templateTop, { user: toUser }));
            }
            $("#chat-content").html("");
            var loginUsername = $('#txtFromUsername').val();
            var templateLeft = $("#chat-left-template").html();
            var templateRight = $("#chat-right-template").html();
            _.forEach(messageDetails, function (message) {
                if (loginUsername == message.Username) {
                    $("#chat-content").append(_.template(templateLeft, { user: fromUser, message: message }));
                } else {
                    $("#chat-content").append(_.template(templateRight, { user: toUser, message: message }));
                }
            });
            $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
        }

        // On New User Connected
        chatHub.client.onNewDoctorConnected = function (id, name) {
            AddUser(chatHub, id, name);
        }

        chatHub.client.messageReceived = function (sender, receiver, message) {
            console.log("Message Receive:");
            console.log(message);
            var fromUsername = $('#txtFromUsername').val();
            var toUsername = $('#txtToUsername').val();
            if (receiver.Username == fromUsername) {
                chatBoxView.renderContactList(receiver.DoctorList);
                if (toUsername == sender.Username) {
                    AddMessage(sender, message);
                }
            }

            if (sender.Username == fromUsername) {
                chatBoxView.renderContactList(sender.DoctorList);
                if (toUsername == receiver.Username) {
                    AddMessage(sender, message);
                }
            }
            $(".unread-message").html(receiver.CountMessageUnRead);
        }
    }

    function AddMessage(user, message) {
        var loginUsername = $('#txtFromUsername').val();
        var template = $("#chat-right-template").html();
        if (loginUsername == user.Username) {
            template = $("#chat-left-template").html();
        }
        $("#chat-content").append(_.template(template, { user: user, message: message }));
        $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
    }
</script>


