@{
    ViewBag.Title = "Tư Vấn Online";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@model IEnumerable<OMCS.DAL.Model.User>

<!--Script references. -->
<script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
<script src="~/signalr/hubs"></script>
<body>
    <h1>Tư vấn trực tuyến
    </h1>
    <hr />
    <div class="row" id="chatbox">
        <div class="col-xs-12 col-sm-6 col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading c-list">
                    <span class="title">Danh sách bác sĩ</span>
                    <ul class="pull-right c-controls">
                        <li><a href="#" class="hide-search" data-command="toggle-search" data-toggle="tooltip" data-placement="top" title="Toggle Search"><i class="glyphicon glyphicon-cog"></i></a></li>
                    </ul>
                </div>

                <div class="row" style="display: none;">
                    <div class="col-xs-12">
                        <div class="input-group c-search">
                            <input type="text" class="form-control" id="contact-list-search">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-search text-muted"></span></button>
                            </span>
                        </div>
                    </div>
                </div>
                <ul class="list-group" id="contact-list">
                </ul>
            </div>
        </div>
        <div class="col-md-8">
            <div id="divChat" class="panel panel-primary">
                <div class="panel-body">
                    <ul class="chat" id="chat-content">
                    </ul>
                </div>
                <div class="panel-footer">
                    <div class="input-group">
                        <input id="txtMessage" type="text" class="form-control input-sm" placeholder="Nội dung tin nhắn..." />
                        <span class="input-group-btn">
                            <button class="btn btn-warning btn-sm" id="btnSendMsg">Gửi</button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script id="doctor-list-template" type="text/template">
    <%
        _.each(doctors, function(doctor){
    %>
    <li class="list-group-item">
        <div class="col-xs-12 col-sm-3">
            <img src="/Content/ProfilePicture/<%= doctor.ProfilePicture %>" alt="<%= doctor.FullName %>" class="img-responsive img-circle" />
        </div>
        <div class="col-xs-12 col-sm-9">
            <input class="username" type="hidden" value="<%= doctor.Username %>" />
            <span class="name"><%= doctor.FullName %></span><br />
            <span class="speciaty"><%= doctor.SpeciatyField %></span>
            <span class="lastest-message"><%= doctor.LastestContent %></span><br />
            <% if (doctor.IsOnline) {
            %>
                <i class="glyphicon glyphicon-ok" style="position: absolute; right: 0; top: 40px; color: #2980b9; font-size: 1.2em;"></i>
            <% } %>

            <% if (!doctor.IsRead) {
            %>
                <i class="glyphicon glyphicon-bell" style="position: absolute; right: 0; top: 21px; color: #e67e22; font-size: 1.2em;"></i>
            <% } %>
        </div>
        <div class="clearfix"></div>
    </li>
    <%
        });
    %>  
</script>

<script id="chat-left-template" type="text/template">
<li class="left clearfix">
    <span class="chat-img pull-left">
        <img src="/Content/ProfilePicture/<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
    </span>
    <div class="chat-body clearfix">
        <div class="header">
            <strong class="primary-font"><%= user.FullName %></strong> <small class="pull-right text-muted">
                <span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
        </div>
        <p>
            <%= message.Content %>
        </p>
    </div>
</li>
</script>

<script id="chat-right-template" type="text/template">
<li class="right clearfix <% if (!message.IsRead) { %> unread-message-hightlight<% } %>">
    <span class="chat-img pull-right">
        <img src="/Content/ProfilePicture/<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
    </span>
    <div class="chat-body clearfix">
        <div class="header">
            <small class=" text-muted"><span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
            <strong class="pull-right primary-font"><%= user.FullName %></strong>
        </div>
        <p>
            <%= message.Content %>
        </p>
    </div>
</li>
</script>

<script type="text/javascript">

    ChatBoxView = Backbone.View.extend({
        el: $("#chatbox"),
        contactListEl: $("#contact-list"),
        initialize: function () {
            this.render();
        },
        events: {
            "click .list-group-item": "getMessageList",
            "click #btnSendMsg": "sendMessage",
            "keypress #txtMessage": "sendMessagePress"
        },
        renderContactList: function (doctors) {
            var template = _.template($("#doctor-list-template").html(), { doctors: doctors });
            this.contactListEl.html(template);
        },
        getMessageList: function (e) {
            var username = $(e.currentTarget).find(".username").val();
            $('#txtToUsername').val(username);
            chatHub.server.getMessageList(username);
        },
        sendMessage: function() {
            var msg = $("#txtMessage").val();
            var toUsername = $('#txtToUsername').val();
            var fromUsername = $('#txtFromUsername').val();
            if ((msg.length > 0) && (toUsername.length > 0)) {
                chatHub.server.sendMessageTo(toUsername, msg);
                $("#txtMessage").val('');
            }
        },
        sendMessagePress: function(e) {
            if (e.which == 13) {
                this.sendMessage();
            }
        }
    });

    var chatBoxView = new ChatBoxView();

    var chatHub = $.connection.chatHub;

    $(function () {
        console.log("On ready Index");
        registerClientMethods(chatHub);
        $.connection.hub.start().done(function () {
            chatHub.server.connectPatient($("#txtFromUsername").val());
        });
    });

    function registerClientMethods(chatHub) {
        chatHub.client.onGetDoctorList = function (doctors) {
            console.log("onGetDoctorList");
            chatBoxView.renderContactList(doctors);
        }

        chatHub.client.onRefreshDoctorList = function () {
            chatHub.server.connectPatient($("#txtFromUsername").val());
        }

        chatHub.client.onGetMessageList = function (fromUser, toUser, messageDetails) {
            console.log("onGetMessageList");
            console.log(messageDetails);
            console.log(fromUser);
            console.log(toUser);
            $("#chat-content").html("");
            var loginUsername = $('#txtFromUsername').val();
            var templateLeft = $("#chat-left-template").html();
            var templateRight = $("#chat-right-template").html();
            _.forEach(messageDetails, function (message) {
                if (loginUsername == message.Username) {
                    $("#chat-content").append(_.template(templateLeft, { user: fromUser, message: message }));
                } else {
                    $("#chat-content").append(_.template(templateRight, { user: toUser, message: message }));
                }
            });
            $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
        }

        // On New User Connected
        chatHub.client.onNewDoctorConnected = function (id, name) {
            AddUser(chatHub, id, name);
        }

        chatHub.client.messageReceived = function (sender, receiver, message) {
            console.log("Message Receive:");
            console.log(message);
            var fromUsername = $('#txtFromUsername').val();
            var toUsername = $('#txtToUsername').val();
            if (receiver.Username == fromUsername) {
                chatBoxView.renderContactList(receiver.DoctorList);
                if (toUsername == sender.Username) {
                    AddMessage(sender, message);
                }
            }

            if (sender.Username == fromUsername) {
                chatBoxView.renderContactList(sender.DoctorList);
                if (toUsername == receiver.Username) {
                    AddMessage(sender, message);
                }
            }
            
            $(".unread-message").html(receiver.CountMessageUnRead);
        }
    }

    function AddMessage(user, message) {
        var loginUsername = $('#txtFromUsername').val();
        var template = $("#chat-right-template").html();
        if (loginUsername == user.Username) {
            template = $("#chat-left-template").html();
        }
        $("#chat-content").append(_.template(template, { user: user, message: message }));
        $(".panel-body").scrollTop($(".panel-body")[0].scrollHeight);
    }

        //$(function () {
        //    $('[data-toggle="tooltip"]').tooltip();

        //    $('[data-command="toggle-search"]').on('click', function (event) {
        //        event.preventDefault();
        //        $(this).toggleClass('hide-search');

        //        if ($(this).hasClass('hide-search')) {
        //            $('.c-search').closest('.row').slideUp(100);
        //        } else {
        //            $('.c-search').closest('.row').slideDown(100);
        //        }
        //    })

        //    $('#contact-list').searchable({
        //        searchField: '#contact-list-search',
        //        selector: 'li',
        //        childSelector: '.col-xs-12',
        //        show: function (elem) {
        //            elem.slideDown(100);
        //        },
        //        hide: function (elem) {
        //            elem.slideUp(100);
        //        }
        //    })
        //});
</script>



