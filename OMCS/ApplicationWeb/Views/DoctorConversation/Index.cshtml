@{
    ViewBag.Title = "Index";
    Layout = null;
}
<!DOCTYPE html>
<head>
    @using OMCS.Web
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Trang quản lý Bác Sĩ</title>
    @Styles.Render("~/bundles/cssOMCS")
    <link href="~/Content/bootply-admin.css" rel="stylesheet" type="text/css" />

    <script type="text/javascript">
        var baseUrl = "@Url.Content("~")";
    </script>

    @Scripts.Render("~/bundles/jsOMCS")
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript" src="~/Content/plupload/moxie.js"></script>
    <script type="text/javascript" src="~/Content/plupload/plupload.dev.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.flexslider.js"></script>
</head>
<!-- Header -->
<div id="top-nav" class="navbar navbar-inverse navbar-static-top">
    <div class="container">
        <div class="navbar-header">
            <a class="navbar-brand" href="~/Doctor/Index">Bác Sĩ: @User.LastName @User.FirstName</a>
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li><a href="~/Account/Logout"><i class="glyphicon glyphicon-lock"></i>Đăng Xuất</a></li>
            </ul>
        </div>
    </div>
    <!-- /container -->
</div>
<!-- /Header -->

<!-- Main -->
<div class="container">

    <div class="row">
        <div class="col-xs-4" style="float: right">
            <label class="switch-light progress progress-striped active" onclick="">
                <input type="checkbox" id="private-consult-enable">
                <span>Tư vấn riêng
                <span aria-label="Tắt" title="Tắt">O</span>
                    <span aria-label="Bật" title="Bật">I</span>
                </span>
                <a class="progress-bar progress-bar-success"></a>
            </label>
        </div>
        <div class="col-md-12">
            <div class="row" id="chatbox">
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="panel panel-default" id="historyConsultant">
                        <div class="panel-heading c-list">
                            <span class="title">Lịch sử tư vấn</span>
                        </div>
                        <div class="row" style="display: none;">
                            <div class="col-xs-12">
                                <div class="input-group c-search">
                                    <input type="text" class="form-control" id="contact-list-search">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-search text-muted"></span></button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <ul class="list-group" id="contact-list">
                        </ul>
                    </div>

                    <div class="panel panel-default" id="patientDetailPanel">
                        <div class="panel-heading" id="patientDetailPanelHeading">
                        </div>
                        <div class="panel-body">
                            <fieldset>
                                <legend>Lịch sử khám bệnh</legend>
                            </fieldset>
                            <div class="flexslider">
                                <ul class="treatment-history-list slides">
                                </ul>
                            </div>
                            <div class="pull-right treatment-navigation">
                                <button class="btn btn-default btn-sm btn-omcs btn-prev" data-toggle="tooltip" data-original-title="Quay lại">
                                    <i class="glyphicon glyphicon-chevron-left" style="font-size: 12px;"></i>
                                </button>
                                <button class="btn btn-default btn-sm btn-omcs btn-next" data-toggle="tooltip" data-original-title="Tiếp tục">
                                    <i class="glyphicon glyphicon-chevron-right" style="font-size: 12px;"></i>
                                </button>
                            </div>
                            <div class="clearfix"></div>
                            <fieldset>
                                <legend>Khám bệnh</legend>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="panel panel-primary webcam-content" style="display:none">
                        <div class="panel-body">
                            <video id="webcam" class="video patient cool-background" autoplay="autoplay"
                                controls="controls" muted="muted" style="width: 100%; height: 100%;">
                            </video>
                            <canvas id="photo" style="display: none"></canvas>
                        </div>
                        <div class="panel-footer">
                            <div class="input-group-btn" style="margin-right: 53px;margin-left: auto;display:block">
                                <button class="btn btn-info btn-sm" id="takePhoto" data-toggle="tooltip" data-original-title="Chụp hình ảnh...">
                                    <i class="glyphicon glyphicon-camera" style="font-size: 12px;"></i>
                                </button>
                                <button class="btn btn-warning btn-sm" id="closePatientWebcam" data-toggle="tooltip" data-original-title="Đóng webcam...">
                                    <i class="glyphicon glyphicon-remove" style="font-size: 12px;"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="divChat" class="panel panel-primary">
                        <div class="panel-body" style="padding-right: 0">
                            <ul class="chat" id="chat-content" style="height: 408px; padding-right: 10px">
                            </ul>
                        </div>
                        <div class="panel-footer">
                            <div class="input-group">
                                <textarea id="txtMessage" class="form-control" rows="2" placeholder="Nội dung tin nhắn..."></textarea>
                                <span class="input-group-btn">
                                    <button class="btn btn-warning btn-sm" id="btnSendMsg">Gửi</button>
                                </span>
                            </div>
                            <div id="filelist"></div>
                            <div id="upload-container">
                                <a id="pickfiles" href="javascript:;">Gửi file đính kèm</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--/col-span-9-->
    </div>
</div>
<!-- /Main -->
<input id="txtFromEmail" class="textBox" value="@User.Email" type="hidden"/>
<input id="txtToEmail" class="textBox" value="" type="hidden" />

<div class="modal fade in" id="modal-popup-img" aria-hidden="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="modal-content">
                    <img src="#" class="img-responsive">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade in" id="modal-popup">
</div>

<div class="modal fade in" id="modal-popup-full">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title"></h4>
      </div>
      <div class="modal-body">
      </div>
    </div>
  </div>
</div>

<div class="modal fade in" id="view-model">
    <div id="view-container"></div>
</div>

<script id="doctor-list-template" type="text/template">
    <%
        _.each(conversations, function(conversation){
    %>
    <li class="list-group-item">
        <div class="col-xs-12 col-sm-12">
            <input class="username" type="hidden" value="<%= conversation.Email %>" />
            <span class="name"><%= conversation.FullName %></span><br />
            <span class="speciaty"><%= conversation.LastestContent %></span><br />
            <% if (conversation.IsOnline) {
            %>
                <i class="glyphicon glyphicon-user" style="position: absolute; right: 0; top: 40px; color: #2980b9; font-size: 1.2em;"></i>
            <% } %>

            <% if (!conversation.IsRead) {
            %>
                <i class="glyphicon glyphicon-bell" style="position: absolute; right: 0; top: 21px; color: #e67e22; font-size: 1.2em;"></i>
            <% } %>
        </div>
        <div class="clearfix"></div>
    </li>
    <%
        });
    %>  
</script>

<script id="chat-left-template" type="text/template">
    <li class="left clearfix">
        <span class="chat-img pull-left">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <strong class="primary-font"><%= user.FullName %></strong>
                <small class="pull-right text-muted">
                    <span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %>
                </small>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script id="chat-right-template" type="text/template">
    <li class="right clearfix <% if (!message.IsRead) { %> unread-message-hightlight<% } %>">
        <span class="chat-img pull-right">
            <img src="@Html.GetPictureUrl("Profile")<%= user.ProfilePicture %>" alt="User Avatar" class="img-circle" />
        </span>
        <div class="chat-body clearfix">
            <div class="header">
                <small class=" text-muted"><span class="glyphicon glyphicon-time"></span><%= message.CreatedDate %></small>
                <strong class="pull-right primary-font"><%= user.FullName %></strong>
            </div>
            <% if (message.Content != null) { %>
            <p style="white-space: pre-line"><%= message.Content %></p>
            <% } else if (isImage(message.Attachment)) { %>
                <img src="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" class="picture-thumbnail" />
            <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" download>
                <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
            </a>
            <% } else { %>
                <a href="@Html.GetPictureUrl("Upload")<%= message.Attachment %>" target="_blank">
                    <i class="glyphicon glyphicon-paperclip"></i><%= message.Attachment %>
                </a><% } %>
        </div>
    </li>
</script>

<script id="treatment-history-template" type="text/html">
    <% _.each(treatmentHistories, function(treatmentHistory) { %>
    <li class="treatment-history-item">
        <h4><span class="label label-info" data-original-title="Ngày tạo" data-toggle="tooltip"><%= treatmentHistory.dateCreated %></span></h4>
                                    
        <div class="medical-record-name">
            <a class="btn btn-default btn-sm" style="border-radius: 0" href="@Url.Action("ViewMedicalProfile", "DoctorMedicalProfile")?medicalProfileId=<%= treatmentHistory.medicalRecordId %>"><%= treatmentHistory.medicalRecordName %></a>
        </div>
        <span class="text"><b>Ngày phát bệnh:</b> <%= treatmentHistory.onSetDate %></span>
        <span class="text"><b>Chẩn đoán:</b> <%= treatmentHistory.diagnosis %></span>
        <span class="text"><b>Tình trạng điều trị:</b> <%= treatmentHistory.condition %></span>
                           
        <div class="treatment-item-btn-group">
            <ul>
                <li class="facebook" style="width: 34%;">
                    <a href="/DoctorMedicalProfile/ViewMedicalProfile/7?medicalProfileTemplateId=1" target="_blank" data-container="body" data-original-title="Xem chi tiết" data-toggle="tooltip">
                        <span class="glyphicon glyphicon-search"></span></a>
                </li>
                <li class="twitter" style="width: 33%;">
                    <a href="/DoctorMedicalProfile/UpdateMedicalProfile/7?medicalProfileTemplateId=1" target="_blank" data-container="body" data-original-title="Chỉnh sửa" data-toggle="tooltip">
                        <span class="glyphicon glyphicon-pencil"></span></a>
                </li>
                <li class="google-plus" style="width: 33%;">
                    <a href="/DoctorMedicalProfile/UpdateMedicalProfile/7?medicalProfileTemplateId=1" target="_blank" data-container="body" data-original-title="Xóa" data-toggle="tooltip">
                        <span class="glyphicon glyphicon-remove"></span></a>
                </li>
                                            
            </ul>
        </div>
    </li>
    <% }) %>
</script>

<script id="user-detail-heading-template" type="text/html">
    <div class="row">
        <input type="hidden" value="<%= patientDetail.patientId %>" id="patientId"/>
        <div class="col-xs-12 col-sm-3">
            <img src="/Content/Image/ProfilePicture/<%= patientDetail.profilePicture %>" class="img-responsive img-circle">
        </div>
        <div class="col-xs-12 col-sm-9">
            <span class="name"><%= patientDetail.fullname %></span><br>
            <span class="speciaty"><%= patientDetail.job %> - <%= patientDetail.age %> tuổi</span><br>
            <button class="btn btn-info btn-sm" data-original-title="Xem chi tiết" data-toggle="tooltip" id="btnViewPatientDetail">
                <i class="glyphicon glyphicon-search" style="font-size: 12px;"></i>
            </button>
            <button class="btn btn-info btn-sm" data-original-title="Dị ứng" data-toggle="tooltip" style="margin-left: 4px;" id="btnViewAllergy">
                <i class="glyphicon glyphicon-list-alt" style="font-size: 12px;"></i>
            </button>
            <button class="btn btn-info btn-sm" data-original-title="Lịch sử tiêm chủng" data-toggle="tooltip" style="margin-left: 4px;" id="btnViewImmunization">
                <i class="fa fa-medkit" style="font-size: 12px;"></i>
            </button>
            <button class="btn btn-info btn-sm" id="requestWebcam" data-toggle="tooltip" data-original-title="Yêu cầu Webcam..." style="margin-left: 4px;">
                <i class="glyphicon glyphicon-facetime-video" style="font-size: 12px;"></i>
            </button>
        </div>
    </div>
</script>

<script type='text/javascript'>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
        var chatHub = $.connection.chatHub;
        registerClientMethodsInConversation(chatHub);

        //enable / disable
        $('#private-consult-enable').click(function () {
            if ($(this).prop("checked")) {
                $("#historyConsultant").css("display", "none");
                $("#patientDetailPanel").css("display", "block");
                var patientEmail = $("#txtToEmail").val();
                patientDetailView.render(patientEmail);
            } else {
                $("#historyConsultant").css("display", "block");
                $("#patientDetailPanel").css("display", "none");
            }
        });


        // Start Hub
        $.connection.hub.start().done(function () {
            var fromUser = $("#txtFromEmail").val();
            chatHub.server.connectDoctor(fromUser);
        });

        initUploadAttachment();
    });
    
    PatientDetailView = Backbone.View.extend({
        el: $("#patientDetailPanel"),
        events: {
            "click #btnViewPatientDetail": "viewPatientDetail",
            "click #btnViewAllergy": "viewAllergy",
            "click #btnViewImmunization": "viewImmunization",
            "click .btn-prev": "goToPrevious",
            "click .btn-next": "goToNext"
        },
        goToPrevious: function () {
            $('.flexslider').flexslider('prev');
        },
        goToNext: function () {
            $('.flexslider').flexslider('next');
        },
        viewPatientDetail: function () {
            var email = $("#txtToEmail").val();
            $.get(baseUrl + "DoctorUser/View?email=" + email, function (data) {
                $('#view-container').html(data);
                $('#view-model').modal('show');
            });
        },
        viewAllergy: function () {
            var patientId = $("#patientId").val();
            $.ajax({
                url: baseUrl + "UserHealthRecord/ShowAllergyList/" + patientId,
                success: function(e) {
                    $("#modal-popup-full").find(".modal-body").html(e);
                    $("#modal-popup-full").modal("show");
                }
            });
        },
        viewImmunization: function() {
            var patientId = $("#patientId").val();
            $.ajax({
                url: "/UserHealthRecord/ShowImmunizationList/" + patientId,
                success: function(e) {
                    $("#modal-popup-full").find(".modal-body").html(e);
                    $("#modal-popup-full").modal("show");
                }
            });
        },
        render: function (email) {
            $.ajax({
                url: baseUrl + "DoctorUser/ViewInJson?email=" + email,
                success: function (data) {
                    patientDetail = JSON.parse(data);
                    var template = _.template($("#user-detail-heading-template").html(), { patientDetail: patientDetail });
                    $("#patientDetailPanelHeading").html(template);
                }
            });
            $.ajax({
                url: baseUrl + "TreatmentHistory/GetAllTreatmentHistoryList?patientEmail=" + email,
                success: function (data) {
                    treatmentHistories = JSON.parse(data);
                    var template = _.template($("#treatment-history-template").html(), { treatmentHistories: treatmentHistories });
                    $(".treatment-history-list").html(template);
                    $('.flexslider').flexslider({
                        animation: "slide",
                        controlNav: false,
                        directionNav: false,
                        slideshow: false
                    });
                }
            });
        }
    });
    var patientDetailView = new PatientDetailView();


    BodyView = Backbone.View.extend({
        el: $("body"),
        events: {
            "click #closePatientWebcam": "hideWebcam",
            "click #takePhoto": "takePhoto"
        },
        hideWebcam: function (e) {
            $(".webcam-content").css("display", "none");
        },
        takePhoto: function (e) {
            var video = $("#webcam")[0];
            var photo = $("#photo")[0],
                context = photo.getContext('2d');

            photo.width = video.clientWidth;
            photo.height = video.clientHeight;
            context.drawImage(video, 0, 0, photo.width, photo.height);

            var url = baseUrl + "FilmDocument/CreateWhenChat";
            var toEmail = $('#txtToEmail').val();
            $.get(url + "?patientEmail=" + toEmail, function (data) {
                $('#modal-popup').html(data);
                $('#modal-popup').modal('show');
                var form = $('#modal-popup').find("form");
                validationForm(form);
                $("#imgPhoto").attr("src", photo.toDataURL());
                $("textarea[name=imgBase64]").val(photo.toDataURL());
            });
        }
    });
    new BodyView();
    ChatBoxView = Backbone.View.extend({
        el: $("#chatbox"),
        doctorListEl: $("#contact-list"),
        initialize: function () {
            this.render();
        },
        events: {
            "click .list-group-item": "getMessageList",
            "click #btnSendMsg": "sendMessage",
            "click #requestWebcam": "requestWebcam",
            "keypress #txtMessage": "sendMessagePress",
            "click .picture-thumbnail": "showFullPicture",
            "focus #txtMessage": "txtMessageFocus"
        },
        txtMessageFocus: function (e) {
            $(".popover").hide();
        },
        showFullPicture: function (e) {
            var target = $(e.currentTarget);
            $("#modal-popup-img").find("img").attr("src", target.attr("src"));
            $("#modal-popup-img").modal("show");
        },
        requestWebcam: function () {
            var toEmail = $('#txtToEmail').val();
            if (toEmail.length > 0) {
                chatHub.server.requestWebcam(toEmail);
            }
        },
        renderContactList: function (conversations) {
            var template = _.template($("#doctor-list-template").html(), { conversations: conversations });
            this.doctorListEl.html(template);
        },
        getMessageList: function (e) {
            var username = $(e.currentTarget).find(".username").val();
            $('#txtToEmail').val(username);
            chatHub.server.getMessageList(username);
        },
        sendMessage: function (e) {
            var msg = $("#txtMessage").val();
            var toEmail = $('#txtToEmail').val();
            var fromEmail = $('#txtFromEmail').val();
            if ((msg.length > 0) && (toEmail.length > 0)) {
                chatHub.server.sendMessageTo(toEmail, msg);
                $("#txtMessage").val('');
            }
            return;
        },
        sendMessagePress: function (e) {
            if (e.keyCode == 13 && !e.shiftKey) {
                e.preventDefault();
                var msg = $("#txtMessage").val();
                var toEmail = $('#txtToEmail').val();
                var fromEmail = $('#txtFromEmail').val();
                if ((msg.length > 0) && (toEmail.length > 0)) {
                    chatHub.server.sendMessageTo(toEmail, msg);
                    $("#txtMessage").val('');
                }
                return;
            }

            if (e.keyCode == 13 && e.shiftKey) {
            }
        }
    });

    var chatBoxView = new ChatBoxView();

    // Declare a proxy to reference the hub. 
    var chatHub = $.connection.chatHub;

    function registerClientMethodsInConversation(chatHub) {
        chatHub.client.onConnected = function (id, doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }

        chatHub.client.onMessageUnRead = function (doctorDetail) {
            $(".unread-message").html(doctorDetail.CountMessageUnRead);
        }
        chatHub.client.messageReceived = function (sender, receiver, message) {
            console.log("Message Receive:");
            console.log(receiver);

            var fromEmail = $('#txtFromEmail').val();
            var toEmail = $('#txtToEmail').val();
            if (receiver.Email == fromEmail) {
                chatBoxView.renderContactList(receiver.ConversationList);
                if (toEmail == sender.Email) {
                    AddMessage(sender, message);
                }
            }

            if (sender.Email == fromEmail) {
                chatBoxView.renderContactList(sender.ConversationList);
                if (toEmail == receiver.Email) {
                    AddMessage(sender, message);
                }
            }
        }

        chatHub.client.onGetConversationList = function (conversations) {
            console.log(conversations);
            chatBoxView.renderContactList(conversations);
        }

        chatHub.client.onGetMessageList = function (fromUser, toUser, messageDetails) {
            var loginEmail = $('#txtFromEmail').val();
            var templateLeft = $("#chat-left-template").html();
            var templateRight = $("#chat-right-template").html();
            if ($("#chat-content").hasClass("mCustomScrollbar")) {
                $("#chat-content").mCustomScrollbar("destroy");
            }
            $("#chat-content").html("");
            _.forEach(messageDetails, function (message) {
                if (loginEmail == message.Email) {
                    $("#chat-content").append(_.template(templateLeft, { user: fromUser, message: message }));
                } else {
                    $("#chat-content").append(_.template(templateRight, { user: toUser, message: message }));
                }
            });
            $("#chat-content").mCustomScrollbar({
                theme: "minimal-dark"
            });
            $("#chat-content").mCustomScrollbar("scrollTo", "last");
        }
    }

    function AddMessage(user, message) {
        var loginEmail = $('#txtFromEmail').val();
        var template = $("#chat-right-template").html();
        if (loginEmail == user.Email) {
            template = $("#chat-left-template").html();
        }
        $("#chat-content .mCSB_container").append(_.template(template, { user: user, message: message }));
        $("#chat-content").mCustomScrollbar("update");
        $("#chat-content").mCustomScrollbar("scrollTo", "last");
    }

    function initUploadAttachment() {
        var uploader = new plupload.Uploader({
            runtimes: 'html5,flash,silverlight,html4',
            browse_button: 'pickfiles', // you can pass in id...
            container: document.getElementById('upload-container'), // ... or DOM Element itself
            url: baseUrl + 'UserConversation/Upload',
            flash_swf_url: baseUrl + 'Content/plupload/js/Moxie.swf',
            silverlight_xap_url: baseUrl + 'Content/plupload/js/Moxie.xap',

            filters: {
                max_file_size: '4mb',
                mime_types: [
                    { title: "Image files", extensions: "jpg,gif,png" },
                    { title: "Zip files", extensions: "zip,rar,7z,pdf,doc,docx,xls,xlsx" }
                ]
            },

            multipart_params: {
            },

            init: {
                UploadProgress: function (up, file) {
                    document.getElementById(file.id).getElementsByTagName('b')[0].innerHTML = '<span>' + file.percent + "%</span>";
                },

                FilesAdded: function () {
                    uploader.start();
                },

                UploadComplete: function () {
                    chatHub.server.getLastestChatMessage($('#txtToEmail').val());
                    $('#filelist').children().fadeOut(2000);
                },

                Error: function (up, err) {
                    console.log("\nError #" + err.code + ": " + err.message);
                }
            }
        });

        uploader.init();
        uploader.bind('FilesAdded', function (up, files) {
            uploader.settings.multipart_params.fromEmail = $('#txtFromEmail').val();
            uploader.settings.multipart_params.toEmail = $('#txtToEmail').val();
            plupload.each(files, function (file) {
                document.getElementById('filelist').innerHTML += '<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';
            });
        });
    }
</script>

<script src="~/Scripts/webrtc/adapter.js"></script>
<script src="~/Scripts/webrtc/connectionManager.js"></script>
<script src="~/Scripts/webrtc/app-doctor.js"></script>
