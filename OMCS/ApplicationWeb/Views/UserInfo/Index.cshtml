@model OMCS.DAL.Model.Patient
@using OMCS.Web
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<fieldset>
    <legend>Thông tin Người dùng</legend>
</fieldset>

<div class="col-md-12">
    <div class="row">
        <div class="col-xs-4" style="float: right">
            <label class="switch-light progress progress-striped active" onclick="">
                <input type="checkbox" id="enable">
                <span>Thay đổi
                <span aria-label="Tắt" title="Tắt">O</span>
                    <span aria-label="Bật" title="Bật">I</span>
                </span>
                <a class="progress-bar progress-bar-success"></a>
            </label>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-4" style="float: right; display: none" id="autoopendiv">
            <label class="switch-light progress progress-striped active" onclick="">
                <input type="checkbox" id="autoopen">
                <span>Liên tiếp
                <span aria-label="Tắt" title="Tắt">O</span>
                    <span aria-label="Bật" title="Bật">I</span>
                </span>
                <a class="progress-bar progress-bar-success"></a>
            </label>
        </div>
    </div>
</div>

<div class="col-md-2">
    <h4>Ảnh đại diện</h4>
    <img alt="User Pic" id="targetImg" src="@Html.GetPictureUrl("Profile")@Model.ProfilePicture" class="img-circle" style="width:120px; height:120px">
    <input type="file" name="file_upload" id="file_upload" />
</div>

<div class="col-md-10">
    <table class="table table-data table-bordered table-striped" style="clear: both">
        <tbody>
            <tr>
                <td style="width: 35%;">@Html.DisplayNameFor(model => model.FullName)</td>
                <td style="width: 65%;">
                    <a href="#" id="lastname" data-type="text"
                    data-title="@Html.DisplayNameFor(model => model.LastName)" class="editable editable-click">
                        @Html.DisplayFor(model => model.LastName)
                    </a>
                    <a href="#" id="firstname" data-type="text" 
                    data-title="@Html.DisplayNameFor(model => model.FirstName)" class="editable editable-click">
                        @Html.DisplayFor(model => model.FirstName)
                    </a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.Password)</td>
                <td>
                    <button class="btn btn-info password-button" data-toggle="modal" data-target="#myModal">Thay đổi mật khẩu</button></td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.Gender)</td>
                <td>
                    <a href="#" id="gender" data-type="select" data-value="@Html.DisplayFor(model => model.Gender)" 
                    data-title="@Html.DisplayNameFor(model => model.Gender)" class="editable editable-click"></a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.Birthday)</td>
                <td>
                    <a href="#" id="birthday" data-type="date" data-value="@Html.DisplayFor(model => model.Birthday)"
                    data-title="@Html.DisplayNameFor(model => model.Birthday)"></a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.Phone)</td>
                <td>
                    <a href="#" id="phone" data-type="tel"
                    data-title="@Html.DisplayNameFor(model => model.Phone)">@Html.DisplayFor(model => model.Phone)</a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.PrimaryAddress)</td>
                <td>
                    <a href="#" id="primaryaddress" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.PrimaryAddress)">@Html.DisplayFor(model => model.PrimaryAddress)</a>
                </td>
            </tr>
            <tr>
                <td>@Html.DisplayNameFor(model => model.SecondaryAddress)</td>
                <td>
                    <a href="#" id="secondaryaddress" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.SecondaryAddress)">@Html.DisplayFor(model => model.SecondaryAddress)</a>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h3>Thông tin bệnh nhân</h3>
<hr />
<table class="table table-data table-bordered table-striped" style="clear: both">
    <tbody>
        <tr>
            <td style="width: 35%;">@Html.DisplayNameFor(model => model.Ethnicity)</td>
            <td style="width: 65%;">
                <a href="#" id="ethnicity" data-type="select2" data-value="@Html.DisplayFor(model => model.Ethnicity)"
                    data-title="@Html.DisplayNameFor(model => model.Ethnicity)" class="editable editable-click"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Nationality)</td>
            <td>
                <a href="#" id="nationality" data-type="select2" data-value="@Html.DisplayFor(model => model.Nationality)" 
                    data-title="@Html.DisplayNameFor(model => model.Nationality)" class="editable editable-click"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Job)</td>
            <td>
                <a href="#" id="job" data-type="text" data-value="@Html.DisplayFor(model => model.Job)"
                    data-title="@Html.DisplayNameFor(model => model.Job)"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.WhereToWork)</td>
            <td>
                <a href="#" id="whereToWork" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.WhereToWork)">@Html.DisplayFor(model => model.WhereToWork)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ContactPerson)</td>
            <td>
                <a href="#" id="contactPerson" data-type="text"
                    data-title="@Html.DisplayNameFor(model => model.ContactPerson)">@Html.DisplayFor(model => model.ContactPerson)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ContactPersonAddress)</td>
            <td>
                <a href="#" id="contactPersonAddress" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.ContactPersonAddress)">@Html.DisplayFor(model => model.ContactPersonAddress)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ContactPersonPhone)</td>
            <td>
                <a href="#" id="contactPersonPhone" data-type="textarea"
                    data-title="@Html.DisplayNameFor(model => model.ContactPersonPhone)">@Html.DisplayFor(model => model.ContactPersonPhone)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.HealthInsuranceId)</td>
            <td>
                <a href="#" id="healthInsuranceId" data-type="text"
                    data-title="@Html.DisplayNameFor(model => model.HealthInsuranceId)">@Html.DisplayFor(model => model.HealthInsuranceId)</a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.HealthInsuranceIssued)</td>
            <td>
                <a href="#" id="healthInsuranceIssued" data-type="date" data-value="@Html.DisplayFor(model => model.HealthInsuranceIssued)"
                    data-title="@Html.DisplayNameFor(model => model.HealthInsuranceIssued)"></a>
            </td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.HealthInsuranceDateExpired)</td>
            <td>
                <a href="#" id="healthInsuranceDateExpired" data-type="date" data-value="@Html.DisplayFor(model => model.HealthInsuranceDateExpired)"
                    data-title="@Html.DisplayNameFor(model => model.HealthInsuranceDateExpired)"></a>
            </td>
        </tr>
    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Thay đổi mật khẩu</h4>
            </div>
            <div class="modal-body">
                <table class="table table-data table-bordered table-striped" style="clear: both">
                    <tbody>
                        <tr>
                            <td>Mật khẩu hiện tại</td>
                            <td>
                                <input type="text" /></td>
                        </tr>
                        <tr>
                            <td>Mật khẩu mới</td>
                            <td>
                                <input type="text" /></td>
                        </tr>
                        <tr>
                            <td>Xác nhận mật khẩu</td>
                            <td>
                                <input type="text" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Trở về</button>
                <button type="button" class="btn btn-primary">Cập nhật mật khẩu</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {

        //defaults
        $.fn.editable.defaults.url = '/UserInfo/Save';
        $.fn.editable.defaults.emptytext = 'Trống';
        $.fn.editable.defaults.pk = @Html.DisplayFor(model => model.UserId);

        //enable / disable
        $('#enable').click(function () {
            if ($(this).prop("checked")) {
                $("#autoopendiv").css("display", "block");
            } else {
                $("#autoopendiv").css("display", "none");
            }
            $('.table-data .editable').editable('toggleDisabled');
        });

        //editables 
        $('#lastname').editable({
            type: 'text',
            name: 'lastname',
            validate: function (value) {
                if ($.trim(value) == '') return jQuery.validator.messages.required;
            }
        });

        $('#firstname').editable({
            validate: function (value) {
                if ($.trim(value) == '') return jQuery.validator.messages.required;
            }
        });

        $('#gender').editable({
            source: [
                { value: "Nam", text: 'Nam' },
                { value: "Nữ", text: 'Nữ' }
            ]
        });
        
        $('#birthday').editable({
            format: 'dd-mm-yyyy',    
            viewformat: 'dd/mm/yyyy',    
            datepicker: {
                firstDay: 1
            }
        });

        $('#phone').editable({
            validate: function (value) {
                var reg = new RegExp(/^[0-9]/);
                if (value.length > 8 && value.length < 12) {
                    if (!value.match(reg)) {
                        return "Vui lòng nhập số !";
                    }
                } else {
                    return "Nhập trong khoảng từ 8-12 !";
                }
            }
        });

        $('#primaryaddress').editable();

        $('#secondaryaddress').editable();

        //Patient

        $('#ethnicity').editable({
            source: vietnamEthnicity,
            select2: {
                width: 200
            }
        });

        $('#nationality').editable({
            source: countries,
            select2: {
                width: 200
            }
        });
        $('#job').editable();
        $('#whereToWork').editable();
        $('#contactPerson').editable();
        $('#contactPersonAddress').editable();       
        $('#contactPersonPhone').editable({
            validate: function (value) {
                var reg = new RegExp(/^[0-9]/);
                if (value.length > 8 && value.length < 12) {
                    if (!value.match(reg)) {
                        return "Vui lòng nhập số !";
                    }
                } else {
                    return "Nhập trong khoảng từ 8-12 !";
                }
            }
        });
        $('#healthInsuranceId').editable();
        $('#healthInsuranceIssued').editable({
            format: 'dd-mm-yyyy',    
            viewformat: 'dd/mm/yyyy',    
            datepicker: {
                firstDay: 1
            }
        });
        $('#healthInsuranceDateExpired').editable({
            format: 'dd-mm-yyyy',    
            viewformat: 'dd/mm/yyyy',    
            datepicker: {
                firstDay: 1
            }
        });
        $('.table-data .editable').on('hidden', function (e, reason) {
            if (reason === 'save' || reason === 'nochange') {
                var $next = $(this).closest('tr').next().find('.editable');
                if ($('#autoopen').is(':checked')) {
                    setTimeout(function () {
                        $next.editable('show');
                    }, 300);
                } else {
                    $next.focus();
                }
            }
        });
        $('.table-data .editable').editable('toggleDisabled');

        $('#file_upload').uploadify({
            'swf': "@Url.Content("~/Content/UploadifyContent/uploadify.swf")",
            'cancelImg': "@Url.Content("~/Content/UploadifyContent/uploadify-cancel.png")",
            'uploader': "@Url.Action("Uploadify", "UserInfo")",
            'onUploadSuccess' : function(file, data, response) {
                //$("#uploaded").append("<img src='" + data + "' alt='Uploaded Image' />");
                window.location.reload(true);
            }
        });
    });
</script>
